{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Watchlist.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Watchlist from './Watchlist.svelte'\n\tlet currentIdx = 0;\n\tconst changeIdx = (index) => {\n\t\tcurrentIdx = index\n\t}\n\n\tlet symbolList = [['AAPL', 'MSFT', 'SPX'], ['AAPL'], []];\n  let nameList = ['Default Watchlist', 'AAPL Watchlist', 'Empty Watchlist']\n\n\tconst addPage = () => {\n\t\tsymbolList.push([])\n\t\tnameList.push('New Page')\n\t\tnameList = nameList\n\t\tsymbolList = symbolList\n\t}\n  const removePage = (i) => {\n\t\tsymbolList.splice( i, 1 );\n\t\tnameList.splice( i, 1 );\n\t\tnameList = nameList\n\t\tsymbolList = symbolList\n\t}\n</script>\n\n<style>\n\tul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  width: 25%;\n  background-color: #f1f1f1;\n  height: 100%;\n  position: fixed;\n  overflow: auto;\n}\nli {\n  display: block;\n  color: #000;\n  padding: 20px 30px;\n  text-decoration: none;\n}\nli:hover {\n  background-color: #555;\n  color: white;\n}\n.remove {\n\twidth: 20px;\n\theight: 20px;\n\tmargin: 10px 10px;\n}\na {\n\tpadding: 5px;\n}\n</style>\n\n<ul>\n\t{#each nameList as name, i}\n  <li on:click={e => changeIdx(i)}>\n\t\t{name}\n\t\t<a on:click={e => removePage(i)}>✘</a>\n\t</li>\n  {/each}\n\n\t<li on:click={e => addPage()}>\n\t\t➕ Add Watchlist\n\t</li>\n</ul>\n\n<Watchlist symbols={symbolList[currentIdx]}/>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { spring } from 'svelte/motion';\n  import { pannable } from './pannable.js';\n\n  export let symbols;\n\n\n\tfunction constructList(symbols) {\n\t\tlet stock = []\n\t\tfor (let i=0; i<symbols.length; i++) {\n\t\t\tstock.push({symbol: symbols[i], description:'Fetching', bidPrice: 'Fetching', askPrice: 'Fetching', lastPrice: 'Fetching', fetchtime: 1});\n\t\t}\n\t\treturn stock\n\t}\n  $: stock = constructList(symbols)\n\n\n\tconst coords = spring({ x: 0, y: 0 }, {\n\t\tstiffness: 0.2,\n\t\tdamping: 0.4\n\t});\n\n\tfunction handlePanStart() {\n\t\tcoords.stiffness = coords.damping = 1;\n\t}\n\n\tfunction handlePanMove(event) {\n\t\tcoords.update($coords => ({\n\t\t\tx: $coords.x + event.detail.dx,\n\t\t\ty: $coords.y + event.detail.dy\n\t\t}));\n\t}\n\n\tfunction handlePanEnd(event) {\n\t\tcoords.stiffness = 0.2;\n\t\tcoords.damping = 0.4;\n\t\tcoords.set({ x: 0, y: 0 });\n\t}\n\n  let add = '';\n  let delet = '';\n  let addResult = [];\n\t$: addChoice = addResult;\n\tlet delResult = [];\n\t$: delChoice = delResult;\n\n\tconst autoComplete = async (symbol, add) => {\n\t\tif (!symbol) {\n\t\t\treturn\n\t\t}\n\t\tconst response = await fetch(encodeURI('https://api.tastyworks.com/symbols/search/' + symbol))\n\t\tconst des = await response.json()\n\t\tconst options = des.data.items\n\t\tif (add) {\n\t\t\taddResult = []\n\t\t\tfor (let i=0; i<options.length; i++) {\n\t\t\t\taddResult.push((options[i].symbol + \":  \" + options[i].description))\n\t\t\t}\n\t\t} else {\n\t\t\tdelResult = []\n\t\t\tfor (let i=0; i<options.length; i++) {\n\t\t\t\tdelResult.push(options[i].symbol)\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst fetchDescription = async (stock) => {\n\t\tconst symbol = stock.symbol\n\t\tconst response = await fetch(encodeURI('https://api.tastyworks.com/symbols/search/' + symbol))\n\t\tconst des = await response.json()\n\t\tif (des.data.items[0]) {\n\t\t\tstock.description = des.data.items[0].description\n\t\t} else {\n\t\t\tstock.description = 'unknown symbol'\n\t\t}\n\t}\n\n  const fetchBook = async (stock) => {\n\t\tconst symbol = stock.symbol;\n\t\tlet response = dxFeed.getQuote(symbol);\n\t\tstock.bidPrice = response.bid;\n\t\tstock.askPrice = response.ask;\n\t\tstock.lastPrice = response.last;\n\t}\n\n\tconst addSymbol = (event, symbol) => {\n\t\tlet s = symbol.split(':')[0]\n\t\tstock.push({symbol: s, description:'Fetching', bidPrice: 'Fetching', askPrice: 'Fetching', lastPrice: 'Fetching', fetchtime: 1});\n\t}\n\n\tconst deleteSymbol = (event, symbol) => {\n\t\tfor (let i=0; i<stock.length; i++) {\n\t\t\tif (stock[i].symbol == symbol) {\n\t\t\t\tstock.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t}\n\n\tonMount(() => {\n\t\tconstructList(symbols)\n\t\tif (stock[0]) {\n\t\t\tstock[0].fetchtime += 1\n\t\t}\n\tconst interval = setInterval(() => {\n\t\tautoComplete(add, true)\n\t\tautoComplete(delet, false)\n\t\tfor (let i = 0; i < stock.length; i++) {\n\t\t\tfetchDescription(stock[i])\n\t\t\tfetchBook(stock[i])\n\t\t\tstock[i].fetchtime += 1\n\t\t}\n\t}, 2000);\n\n\treturn () => {\n\t\tclearInterval(interval);\n\t};\n});\n\n</script>\n\n<style>\n\tp {\n\t\tfont-size: 2em;\n\t\ttext-align: center;\n\t\tpadding-bottom: 50px;\n\t}\n\n\tdiv {\n\t\tfont-size: 1em;\n\t\ttext-align: center;\n\t}\n\tth {\n\t\tfont-size: 1.5em;\n\t\tfont-weight: 400;\n\t\tpadding-top: 10px;\n\t\tpadding-left: 30px;\n\t\tmin-width: 150px;\n\t}\n\t.box {\n\t\t--width: 100px;\n\t\t--height: 100px;\n\t\tposition: absolute;\n\t\twidth: var(--width);\n\t\theight: var(--height);\n\t\tleft: calc(32% - var(--width) / 2);\n\t\ttop: calc(40% - var(--height) / 2);\n\t\tborder-radius: 4px;\n\t\tbackground-color: #ff3e00;\n\t\tcursor: move;\n\t}\n</style>\n\n<ul>\n  <p> Default Watchlist </p>\n\n\t<div>\n\t\t<input bind:value={add} placeholder=\"Add Symbol\" list=\"addChoice\">\n\t\t<datalist id=\"addChoice\">\n\t\t  {#each addChoice as choice}\n\t\t\t\t<option value={choice} />\n\t\t\t{/each}\n\t\t</datalist>\n\n  \t<button on:click={ e => addSymbol(e, add)}>ADD</button>\n\n\t\t<input bind:value={delet} placeholder=\"Delete Symbol\" list=\"delChoice\">\n\t\t<datalist id=\"delChoice\">\n\t\t  {#each delChoice as choice}\n\t\t\t\t<option value={choice} />\n\t\t\t{/each}\n\t\t</datalist>\n  \t<button on:click={ e => deleteSymbol(e, delet)}>DELETE</button>\n  </div>\n\n\t<div class=\"box\"\n\tuse:pannable\n\ton:panstart={handlePanStart}\n\ton:panmove={handlePanMove}\n\ton:panend={handlePanEnd}\n\tstyle=\"transform:\n\t\ttranslate({$coords.x}px,{$coords.y}px)\n\t\trotate({$coords.x * 0.2}deg)\">\n\t<table>\n\t\t<tr>\n\t\t\t<th> Symbol </th>\n\t\t\t<th> Descrption </th>\n\t\t\t<th> BidPrice </th>\n\t\t\t<th> AskPrice </th>\n\t\t\t<th> LastPrice </th>\n\t </tr>\n\n\t{#each stock as {symbol, description, bidPrice, askPrice, lastPrice, fetchtime}}\n\t<tr>\n\t\t<th> {symbol}</th>\n\t\t<th> {description} </th>\n\t\t<th> {bidPrice} </th>\n\t\t<th> {askPrice} </th>\n\t\t<th> {lastPrice}</th>\n\t</tr>\n\t{/each}\n\n </table>\n </div>\n</ul>\n"
  ],
  "names": [],
  "mappings": "AAyBC,EAAE,eAAC,CAAC,AACH,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,GAAG,CACV,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,KAAK,CACf,QAAQ,CAAE,IAAI,AAChB,CAAC,AACD,EAAE,eAAC,CAAC,AACF,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,eAAe,CAAE,IAAI,AACvB,CAAC,AACD,iBAAE,MAAM,AAAC,CAAC,AACR,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,KAAK,AACd,CAAC,AAMD,CAAC,eAAC,CAAC,AACF,OAAO,CAAE,GAAG,AACb,CAAC;ACuEA,CAAC,cAAC,CAAC,AACF,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,IAAI,AACrB,CAAC,AAED,GAAG,cAAC,CAAC,AACJ,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,AACnB,CAAC,AACD,EAAE,cAAC,CAAC,AACH,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,GAAG,CAChB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,SAAS,CAAE,KAAK,AACjB,CAAC,AACD,IAAI,cAAC,CAAC,AACL,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,KAAK,CACf,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,MAAM,CAAE,IAAI,QAAQ,CAAC,CACrB,IAAI,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClC,GAAG,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClC,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,AACb,CAAC"
}